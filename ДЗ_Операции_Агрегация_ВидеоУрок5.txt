Тема Операции 

задание 1
-- Пусть в таблице users поля created_at и updated_at оказались незаполненными.
-- Заполните их текущими датой и временем.

имеется:
mysql> SELECT * FROM users;
+----+--------------------+-------------+------------+------------+
| id | name               | birthday_at | created_at | updated_at |
+----+--------------------+-------------+------------+------------+
|  1 | Геннадий           | 1990-10-05  | NULL       | NULL       |
|  2 | Наталья            | 1984-11-12  | NULL       | NULL       |
|  3 | Александр          | 1985-05-20  | NULL       | NULL       |
|  4 | Сергей             | 1988-02-14  | NULL       | NULL       |
|  5 | Иван               | 1998-01-12  | NULL       | NULL       |
|  6 | Мария              | 2006-08-29  | NULL       | NULL       |
+----+--------------------+-------------+------------+------------+
6 rows in set (0.00 sec)


заполняем дату и время:
mysql> UPDATE users SET created_at = NOW();
Query OK, 6 rows affected (0.00 sec)
Rows matched: 6  Changed: 6  Warnings: 0

mysql> UPDATE users SET updated_at = NOW();
Query OK, 6 rows affected (0.01 sec)
Rows matched: 6  Changed: 6  Warnings: 0

результат:
+----+--------------------+-------------+---------------------+---------------------+
| id | name               | birthday_at | created_at          | updated_at          |
+----+--------------------+-------------+---------------------+---------------------+
|  1 | Геннадий           | 1990-10-05  | 2021-05-03 11:02:40 | 2021-05-03 11:02:57 |
|  2 | Наталья            | 1984-11-12  | 2021-05-03 11:02:40 | 2021-05-03 11:02:57 |
|  3 | Александр          | 1985-05-20  | 2021-05-03 11:02:40 | 2021-05-03 11:02:57 |
|  4 | Сергей             | 1988-02-14  | 2021-05-03 11:02:40 | 2021-05-03 11:02:57 |
|  5 | Иван               | 1998-01-12  | 2021-05-03 11:02:40 | 2021-05-03 11:02:57 |
|  6 | Мария              | 2006-08-29  | 2021-05-03 11:02:40 | 2021-05-03 11:02:57 |
+----+-------------------

задание 2
-- Таблица users была неудачно спроектирована.
-- Записи created_at и updated_at были заданы типом VARCHAR и в них долгое время помещались
-- значения в формате "20.10.2017 8:10".
-- Необходимо преобразовать поля к типу DATETIME, сохранив введеные ранее значения.

имеется: (даты как VARCHAR)
mysql> SELECT * FROM users;
+----+--------------------+-------------+------------------+------------------+
| id | name               | birthday_at | created_at       | updated_at       |
+----+--------------------+-------------+------------------+------------------+
|  1 | Геннадий           | 1990-10-05  | 07.01.2016 12:05 | 07.01.2016 12:05 |
|  2 | Наталья            | 1984-11-12  | 20.05.2016 16:32 | 20.05.2016 16:32 |
|  3 | Александр          | 1985-05-20  | 14.08.2016 20:10 | 14.08.2016 20:10 |
|  4 | Сергей             | 1988-02-14  | 21.10.2016 9:14  | 21.10.2016 9:14  |
|  5 | Иван               | 1998-01-12  | 15.12.2016 12:45 | 15.12.2016 12:45 |
|  6 | Мария              | 2006-08-29  | 12.01.2017 8:56  | 12.01.2017 8:56  |
+----+--------------------+-------------+------------------+------------------+
6 rows in set (0.00 sec)
mysql> DESCRIBE users;
+-------------+-----------------+------+-----+---------+----------------+
| Field       | Type            | Null | Key | Default | Extra          |
+-------------+-----------------+------+-----+---------+----------------+
| id          | bigint unsigned | NO   | PRI | NULL    | auto_increment |
| name        | varchar(255)    | YES  |     | NULL    |                |
| birthday_at | date            | YES  |     | NULL    |                |
| created_at  | varchar(255)    | YES  |     | NULL    |                |
| updated_at  | varchar(255)    | YES  |     | NULL    |                |
+-------------+-----------------+------+-----+---------+----------------+
5 rows in set (0.00 sec)

переформатируем дату:


mysql> ALTER TABLE users ADD COLUMN created_at_date DATETIME;
Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> ALTER TABLE users ADD COLUMN updated_at_date DATETIME;
Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> UPDATE users SET created_at_date = STR_TO_DATE(created_at, '%d.%m.%Y %H:%i');
Query OK, 6 rows affected (0.01 sec)
Rows matched: 6  Changed: 6  Warnings: 0

mysql> UPDATE users SET updated_at_date = STR_TO_DATE(updated_at, '%d.%m.%Y %H:%i');
Query OK, 6 rows affected (0.00 sec)
Rows matched: 6  Changed: 6  Warnings: 0

mysql> ALTER TABLE users DROP COLUMN created_at;
Query OK, 0 rows affected (0.07 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> ALTER TABLE users DROP COLUMN updated_at;
Query OK, 0 rows affected (0.07 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> ALTER TABLE users RENAME COLUMN created_at_date TO created_at;
Query OK, 0 rows affected (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> ALTER TABLE users RENAME COLUMN updated_at_date TO updated_at;
Query OK, 0 rows affected (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 0

Результат:
mysql> DESCRIBE users;
+-------------+-----------------+------+-----+---------+----------------+
| Field       | Type            | Null | Key | Default | Extra          |
+-------------+-----------------+------+-----+---------+----------------+
| id          | bigint unsigned | NO   | PRI | NULL    | auto_increment |
| name        | varchar(255)    | YES  |     | NULL    |                |
| birthday_at | date            | YES  |     | NULL    |                |
| created_at  | datetime        | YES  |     | NULL    |                |
| updated_at  | datetime        | YES  |     | NULL    |                |
+-------------+-----------------+------+-----+---------+----------------+
5 rows in set (0.00 sec)

mysql> SELECT * FROM users;
+----+--------------------+-------------+---------------------+---------------------+
| id | name               | birthday_at | created_at          | updated_at          |
+----+--------------------+-------------+---------------------+---------------------+
|  1 | Геннадий           | 1990-10-05  | 2016-01-07 12:05:00 | 2016-01-07 12:05:00 |
|  2 | Наталья            | 1984-11-12  | 2016-05-20 16:32:00 | 2016-05-20 16:32:00 |
|  3 | Александр          | 1985-05-20  | 2016-08-14 20:10:00 | 2016-08-14 20:10:00 |
|  4 | Сергей             | 1988-02-14  | 2016-10-21 09:14:00 | 2016-10-21 09:14:00 |
|  5 | Иван               | 1998-01-12  | 2016-12-15 12:45:00 | 2016-12-15 12:45:00 |
|  6 | Мария              | 2006-08-29  | 2017-01-12 08:56:00 | 2017-01-12 08:56:00 |
+----+--------------------+-------------+---------------------+---------------------+
6 rows in set (0.00 sec)


задание 3
-- В таблице складских запасов storehouses_products в поле value могут встречаться самые
-- разные цифры: 0, если товар закончился и выше нуля, если на складе имеются запасы.
-- Необходимо отсортировать записи таким образом, чтобы они выводились в порядке увеличения
-- значения value. Однако, нулевые запасы должны выводиться в конце, после всех записей.




имеется:
mysql> SELECT * FROM storehouses_products ORDER BY value ASC;
+----+---------------+------------+-------+---------------------+---------------------+
| id | storehouse_id | product_id | value | created_at          | updated_at          |
+----+---------------+------------+-------+---------------------+---------------------+
|  1 |             1 |        543 |     0 | 2021-05-03 12:19:35 | 2021-05-03 12:19:35 |
|  3 |             1 |       3432 |     0 | 2021-05-03 12:19:35 | 2021-05-03 12:19:35 |
|  6 |             1 |        638 |     1 | 2021-05-03 12:19:35 | 2021-05-03 12:19:35 |
|  4 |             1 |        826 |    30 | 2021-05-03 12:19:35 | 2021-05-03 12:19:35 |
|  5 |             1 |        719 |   500 | 2021-05-03 12:19:35 | 2021-05-03 12:19:35 |
|  2 |             1 |        789 |  2500 | 2021-05-03 12:19:35 | 2021-05-03 12:19:35 |
+----+---------------+------------+-------+---------------------+---------------------+
6 rows in set (0.00 sec)

получаем нужную сортировку:

mysql> SELECT MAX(value) FROM storehouses_products INTO @maxvalue;
Query OK, 1 row affected (0.00 sec)
mysql> SELECT @maxvalue + 2 INTO @maxvalue;
Query OK, 1 row affected (0.00 sec)
mysql> SELECT id, storehouse_id, product_id, value, IF(value=0, @maxvalue, value) AS added_value FROM storehouses_products ORDER BY added_value ASC;
+----+---------------+------------+-------+-------------+
| id | storehouse_id | product_id | value | added_value |
+----+---------------+------------+-------+-------------+
|  6 |             1 |        638 |     1 |           1 |
|  4 |             1 |        826 |    30 |          30 |
|  5 |             1 |        719 |   500 |         500 |
|  2 |             1 |        789 |  2500 |        2500 |
|  1 |             1 |        543 |     0 |        2502 |
|  3 |             1 |       3432 |     0 |        2502 |
+----+---------------+------------+-------+-------------+
6 rows in set (0.00 sec)

mysql> 

Тема Агрегация
задание 1
-- Подсчитайте средний возраст пользователей в таблице users

имеется:

mysql> SELECT * FROM users
    -> ;
+----+--------------------+-------------+---------------------+---------------------+
| id | name               | birthday_at | created_at          | updated_at          |
+----+--------------------+-------------+---------------------+---------------------+
|  1 | Геннадий           | 1990-10-05  | 2016-01-07 12:05:00 | 2016-01-07 12:05:00 |
|  2 | Наталья            | 1984-11-12  | 2016-05-20 16:32:00 | 2016-05-20 16:32:00 |
|  3 | Александр          | 1985-05-20  | 2016-08-14 20:10:00 | 2016-08-14 20:10:00 |
|  4 | Сергей             | 1988-02-14  | 2016-10-21 09:14:00 | 2016-10-21 09:14:00 |
|  5 | Иван               | 1998-01-12  | 2016-12-15 12:45:00 | 2016-12-15 12:45:00 |
|  6 | Мария              | 2006-08-29  | 2017-01-12 08:56:00 | 2017-01-12 08:56:00 |
+----+--------------------+-------------+---------------------+---------------------+
6 rows in set (0.00 sec)

получение среднего возраста:
mysql> SELECT AVG(age) FROM (SELECT (YEAR(CURRENT_DATE)-YEAR(birthday_at))-(RIGHT(CURRENT_DATE,5)<RIGHT(birthday_at,5)) AS age FROM users) AS ageflow;
+----------+
| AVG(age) |
+----------+
|  28.5000 |
+----------+
1 row in set (0.00 sec)

mysql> 

- Тема Агрегация, задание 2
-- Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели.
-- Следует учесть, что необходимы дни недели текущего года, а не года рождения. 

получение из таблицы результата (дату форматируем в текущий год):
mysql> SELECT week_day, amount FROM (SELECT DAYOFWEEK(DATE_FORMAT(birthday_at, '2021-%m-%d')) AS week_day, SUM(1) AS amount FROM users GROUP BY week_day) AS users_days;
+----------+--------+
| week_day | amount |
+----------+--------+
|        3 |      2 |
|        6 |      1 |
|        5 |      1 |
|        1 |      2 |
+----------+--------+
4 rows in set (0.00 sec)



